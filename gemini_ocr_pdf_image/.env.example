# Gemini OCR Configuration Example
# Copy this file to .env and fill in your values

# ============================================================================
# REQUIRED CONFIGURATION
# ============================================================================

# Gemini API key from Google AI Studio
# Get your key at: https://aistudio.google.com/app/apikey
GEMINI_API_KEY=your_gemini_api_key_here

# ============================================================================
# GEMINI MODELS CONFIGURATION
# ============================================================================

# Model for pre-assessment phase (legibility and semantic evaluation)
# Options: gemini-1.5-flash, gemini-2.5-flash, gemini-1.5-pro, etc.
# Use lighter/faster models here for cost optimization
GEMINI_ASSESSMENT_MODEL=gemini-2.5-flash

# Model for OCR text extraction phase
# Options: gemini-1.5-flash, gemini-2.5-flash, gemini-1.5-pro, etc.
# Use more powerful models here for better OCR accuracy
GEMINI_OCR_MODEL=gemini-2.5-flash

# ============================================================================
# PROCESSING PARAMETERS
# ============================================================================

# Minimum legibility score (0-1) to proceed with OCR
# Lower values = more permissive, higher values = stricter quality requirements
LEGIBILITY_THRESHOLD=0.5

# Minimum semantic meaningfulness score (0-1) to save OCR results
# Lower values = accept more content, higher values = require meaningful text
SEMANTIC_THRESHOLD=0.6

# Token budget for Gemini's thinking process (when enabled)
# Higher values = more detailed reasoning but slower processing
THINKING_BUDGET=2000

# DPI for PDF page rendering (affects image quality and processing time)
# Higher values = better quality but slower processing and larger images
DPI=300

# ============================================================================
# THINKING CONFIGURATION
# ============================================================================

# Enable thinking for assessment phase (recommended for complex documents)
# true = detailed analysis with reasoning, false = faster processing
ENABLE_THINKING_ASSESSMENT=true

# Enable thinking for OCR extraction phase (slower but may improve accuracy)
# true = detailed OCR reasoning, false = standard OCR processing
ENABLE_THINKING_OCR=false

# ============================================================================
# DATABASE LOGGING (OPTIONAL)
# ============================================================================

# Enable comprehensive PostgreSQL database logging
# true = log all processing to database, false = CSV files only
ENABLE_DATABASE_LOGGING=false

# PostgreSQL connection URL (only needed if database logging is enabled)
# Format: postgresql://username:password@host:port/database
DATABASE_URL=postgresql://username:password@localhost:5432/ocr_database

# Database connection timeout in seconds
DATABASE_CONNECTION_TIMEOUT=30

# Number of retry attempts for database operations
DATABASE_RETRY_ATTEMPTS=3

# ============================================================================
# DIRECTORIES AND PATHS
# ============================================================================

# Output directory for processed files (can be overridden by CLI --output-dir)
# Relative or absolute path where results will be saved
OUTPUT_DIR=./output

# Logging directory for debug logs and CSV progress files
# All log files and progress tracking will be stored here
LOGS_DIR=./logs

# ============================================================================
# OPTIONAL INPUT PATHS (CLI RECOMMENDED)
# ============================================================================
# These can be set here for convenience, but CLI arguments are recommended
# Uncomment and set values if you want default input paths

# Default PDF or image file to process
# INPUT_FILE=/path/to/your/document.pdf

# Default directory containing images to process (supports subdirectories)
# INPUT_DIR=/path/to/your/images

# ============================================================================
# PDF-SPECIFIC OPTIONS (CLI RECOMMENDED)
# ============================================================================
# These are better specified via CLI for flexibility per document

# Starting page number for PDF processing (1-based indexing)
# START_PAGE=1

# Ending page number for PDF processing (leave empty for all pages)
# END_PAGE=

# ============================================================================
# EXAMPLES OF COMMON CONFIGURATIONS
# ============================================================================

# Cost-Optimized Setup (faster assessment, powerful OCR):
# GEMINI_ASSESSMENT_MODEL=gemini-1.5-flash
# GEMINI_OCR_MODEL=gemini-2.5-flash
# LEGIBILITY_THRESHOLD=0.6
# SEMANTIC_THRESHOLD=0.7

# High-Quality Setup (best models for both phases):
# GEMINI_ASSESSMENT_MODEL=gemini-2.5-flash
# GEMINI_OCR_MODEL=gemini-2.5-flash
# LEGIBILITY_THRESHOLD=0.4
# SEMANTIC_THRESHOLD=0.5

# Fast Processing Setup (lower quality but faster):
# GEMINI_ASSESSMENT_MODEL=gemini-1.5-flash
# GEMINI_OCR_MODEL=gemini-1.5-flash
# LEGIBILITY_THRESHOLD=0.7
# SEMANTIC_THRESHOLD=0.8
# ENABLE_THINKING_ASSESSMENT=false